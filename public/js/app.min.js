/*! scrum_pointing_poker 2017-06-17 */

window.App={vent:_.extend({},Backbone.Events),socket:io.connect(location.origin.replace(/^http/,"ws")),Cards:[0,".5",1,2,3,5,8,13,20,40,100]},App.Router=Backbone.Router.extend({routes:{"":"create","*room":"room"}}),App.StoryModel=Backbone.Model.extend({url:null,sync:function(){return!1}}),App.UserModel=Backbone.Model.extend({defaults:{id:null,type:null,username:null},url:null,sync:function(){return!1}}),App.UsersCollection=Backbone.Collection.extend({url:null,model:App.UserModel,displayVotes:function(){var e=!0;return _.each(this.models,function(t){"voter"!=t.get("type")||t.get("vote")||(e=!1)}),e},comparator:function(e,t){var i="observer"==e.get("type")?10:0,s="observer"==t.get("type")?10:0;return(e.get("username").toString().toLowerCase()>t.get("username").toString().toLowerCase()?1:-1)-(i-s)},sync:function(){return!1}}),App.AttendeesView=function(){var e;return e=_.template('<p class="h2">Awesome People</p><ul class="list-group"><% _.each(users, function(user) {%><li class="list-group-item <%=user.type %>"><span class="pull-left"><i class="fa fa-<%=user.type %>"></i></span><span class="pull-right"><% if (user.vote) { %><% if (display) { %><span class="vote"><%= user.vote %></span><% } else { %><i class="fa fa-check"></i><% }; %><% } else if (user.type == \'voter\') { %><i class="fa fa-commenting-o"></i><% }; %></span><span class="name"><%- user.username %></span></li><% }) %></ul><button type="button" class="btn btn-sm btn-warning">Clear Board</button><button type="button" class="btn btn-sm btn-info">Display Votes</button>'),Backbone.View.extend({template:e,events:{"click .btn-warning":"onClearBoard","click .btn-info":"onDisplayVotes"},initialize:function(e){Backbone.View.prototype.initialize.apply(this,arguments),this.listenTo(this.collection,"add sort remove change reset",this.render),this.listenTo(App.vent,"vote:display_votes",this.displayVotes.bind(this)),this.forceDisplay=!1},render:function(){return this.delegateEvents(),this.$el.html(this.template({users:this.collection.toJSON(),display:this.forceDisplay||this.collection.displayVotes()})),this},displayVotes:function(e){this.forceDisplay=e,this.render()},onDisplayVotes:function(e){e.preventDefault(),App.vent.trigger("vote:display")},onClearBoard:function(e){e.preventDefault(),App.vent.trigger("vote:clear")}})}(),App.PokerCardsView=function(){var e,t=App.Cards.concat(['<i class="fa fa-question"></i>','<i class="fa fa-coffee"></i>']);return e=_.template('<% _.each(cards, function(card) {%><a href="javascript:void(0);" class="card" data-value=\'<%- card %>\'><span class="number"><%= card %></span></a><% }); %>'),Backbone.View.extend({template:e,events:{"click a.card":"onCardSelected"},initialize:function(e){Backbone.View.prototype.initialize.apply(this,arguments),this.listenTo(App.vent,"vote:clear",this.onVoteClear.bind(this))},render:function(){return this.delegateEvents(),this.$el.html(this.template({cards:t})),this},onCardSelected:function(e){e.preventDefault();var t=$(e.currentTarget);t.hasClass("selected")?(vote=null,this.$el.find("a.card").removeClass("selected")):(vote=t.attr("data-value")+"",this.$el.find("a.card").removeClass("selected"),t.addClass("selected")),App.vent.trigger("vote:selected",vote)},onVoteClear:function(){this.$el.find("a.card").removeClass("selected")}})}(),App.PokerObserverView=function(){var e;return e=_.template('<% if (count == 0) { %><div class="alert alert-warning">So lonely...</div><% } else if (display) { %><div class="alert alert-success">Voting Done.</div><% } else { %><div class="alert alert-info">Waiting for votes....</div><% }; %>'),Backbone.View.extend({id:"observerView",template:e,initialize:function(e){Backbone.View.prototype.initialize.apply(this,arguments),this.listenTo(this.collection,"add sort remove change reset",this.render)},render:function(){return this.delegateEvents(),this.$el.html(this.template({display:this.collection.displayVotes(),count:this.collection.length})),this}})}(),App.StatsView=function(){var e;return e=_.template('    <p class="h2">Statistics</p>    <table class="table table-bordered">      <thead>        <tr>          <th>Vote</th>          <th>Total</th>        </tr>      </thead>      <tbody>        <% _.each(totals, function(count, value) { %>          <tr>            <td><%= value %></td>            <td><%= count %></td>          </tr>        <% }); %>      </tbody>    </table>  '),Backbone.View.extend({template:e,initialize:function(e){Backbone.View.prototype.initialize.apply(this,arguments),this.listenTo(this.collection,"add sort remove change reset",this.onCollectionChange.bind(this)),this.listenTo(App.vent,"vote:display_votes",this.onDisplayVotes.bind(this)),this.listenTo(App.vent,"vote:clear",this.onVotesClear.bind(this)),this.isShown=!1},render:function(){return this.isShown?this.$el.html(this.template({totals:this.totals()})):this.$el.empty(),this},onDisplayVotes:function(e){this.isShown=e||this.collection.displayVotes(),this.render()},onCollectionChange:function(){this.onDisplayVotes(!1)},onVotesClear:function(){this.isShown=!1,this.render()},totals:function(){var e=this.collection.pluck("vote").map(function(e){return void 0!==e&&null!==e?e:"none"});return _.countBy(e)}})}(),App.PokerView=function(){var e,t=App.AttendeesView,i=App.StatsView,s=App.PokerCardsView,n=App.PokerObserverView;return e=_.template('<div class="container poker"><div class="row"><div class="col-xs-7"><p class="h5 text-right"><span class="username"></span> <a href="javascript:void(0);" class="logout">(logout)</a></p><input type="text" class="form-control" id="title" placeholder="Task title"><div class="playing-cards"></div></div><div class="col-xs-3 attendees"></div><div class="col-xs-2 stats"></div></div></div><div class="input-group input-group-sm" id="poker-sharing"><span class="input-group-addon"><i class="fa fa-share"></i></span><input type="text" class="form-control" id="share"></div>'),Backbone.View.extend({template:e,bindings:{"input#title":"title",".username":"username"},events:{"click a.logout":"onLogoutClick","keyup input#title":"onTitleChanged"},initialize:function(e){Backbone.View.prototype.initialize.apply(this,arguments),this.subViews={},this.subViews.attendees=new t({collection:this.collection}),this.subViews.stats=new i({collection:this.collection}),this.subViews.cards=new s,this.subViews.observer=new n({collection:this.collection})},render:function(){return this.$el.html(this.template()),this.$el.find("#share").val(window.location.href),this.$el.find(".attendees").html(this.subViews.attendees.render().el),this.$el.find(".stats").html(this.subViews.stats.render().el),"observer"==this.model.get("type")?this.$el.find(".playing-cards").html(this.subViews.observer.render().el):this.$el.find(".playing-cards").html(this.subViews.cards.render().el),this.stickit(),this.delegateEvents(),this},remove:function(){for(var e in this.subViews)this.subViews[e].remove();Backbone.View.prototype.remove.apply(this,arguments)},onTitleChanged:function(e){App.vent.trigger("title:changed",this.model.get("title"))},onLogoutClick:function(e){e.preventDefault(),confirm("Are you sure you want to leave?")&&App.vent.trigger("user:logout")}})}(),App.LoginScreen=function(){var e=_.template('<div class="container login-card-bg"><h1>Planning Poker <small>the simple way for co-located people</small></h1><div><% _.each(cards, function(card) {%><a href="javascript:void(0);" class="card" data-value=\'<%- card %>\'><span class="number"><%= card %></span></a><% }); %></div></div><div class="container credentials"><div class="well well-sm"><form class="form-horizontal"><fieldset><legend>Enter in your credentials</legend><div class="form-group"><input type="text" class="form-control" id="name" placeholder="Your callsign"></div><div class="input-group"><select class="form-control" id="user_type"><option value="voter">As Voter</option><option value="observer">As Observer</option></select><span class="input-group-btn"><button class="btn btn-primary" type="submit">Enter <i class="fa fa-sign-in"></i></button></span></div></fieldset></form></div></div>');return Backbone.View.extend({id:"loginView",template:e,events:{"submit form":"onFormSubmit"},render:function(){var e=App.Cards.concat(App.Cards).concat(App.Cards).concat(App.Cards).concat(App.Cards).concat(App.Cards).concat(App.Cards).concat(App.Cards);return this.$el.html(this.template({cards:e})),this},onFormSubmit:function(e){e.preventDefault();var t=this.$el.find("#name").val().trim(),i=this.$el.find("#user_type").val();t.length>0?App.vent.trigger("user:login",t,i):alert("You need a call sign.")}})}(),App.MainView=Backbone.View.extend({initialize:function(e){Backbone.View.prototype.initialize.apply(this,arguments),this.socket=e.socket,this.subViews={},this.subViews.screen=new App.PokerView({collection:this.collection,model:this.model}),this.listenTo(App.vent,"title:changed",this.onTitleSet.bind(this)),this.listenTo(App.vent,"vote:selected",this.onVoteSet.bind(this)),this.listenTo(App.vent,"vote:display",this.onVoteDisplay.bind(this)),this.listenTo(App.vent,"vote:clear",this.onVoteClear.bind(this)),this.socket.on("message",this.onSocketMessage.bind(this))},remove:function(){this.socket.off("message",this.onSocketMessage.bind(this)),Backbone.View.prototype.remove.apply(this,arguments)},render:function(){return this.$el.html(this.subViews.screen.render().el),this},addUser:function(e){!!this.collection.find({id:e.id})||this.collection.add(e)},onTitleSet:function(e){this.socket.emit("rt.title",e)},onVoteSet:function(e){this.socket.emit("rt.vote",e)},onVoteDisplay:function(){this.socket.emit("rt.vote:display")},onVoteClear:function(){this.socket.emit("rt.vote:clear")},updateMemberVote:function(e){model=this.collection.find({id:e.id}),model.set("vote",e.vote)},onSocketMessage:function(e,t){switch(e){case"title:update":this.model.set("title",t);case"users:remove":this.collection.remove(t);break;case"users:add":case"users:list":this.collection.add(t);break;case"vote:update":this.updateMemberVote(t);break;case"vote:display":App.vent.trigger("vote:display_votes",t)}}}),$(document).ready(function(){var e=null,t=App.socket,i=new App.UsersCollection,s=new App.StoryModel,n=new App.MainView({collection:i,model:s,socket:t}),o=new App.LoginScreen,a=new App.Router,l=function(e){$("#content").html(e.render().el)},r=function(e){data=_.omit(e,"room","id"),$.cookie("_user",JSON.stringify(data),{expires:28})},c=function(){if(!$.cookie("_user"))return{};try{return JSON.parse($.cookie("_user"))}catch(e){return{}}}();App.vent.on("user:login",function(i,s){r(c={username:i,type:s,room:e}),t.emit("rt.user",c)}),App.vent.on("user:logout",function(){r({}),location.reload()}),t.on("reconnect",function(){t.emit("rt.user",c)}),t.on("disconnect",function(){}),t.on("message",function(e,t){switch(e){case"authorized":c=t,s.set("username",t.username),s.set("type",t.type),l(n)}}),a.on("route:create",function(e){a.navigate(Math.random().toString(36).slice(2),{trigger:!0})}),a.on("route:room",function(t){e=t,c.username?App.vent.trigger("user:login",c.username,c.type):l(o)}),Backbone.history.start()});